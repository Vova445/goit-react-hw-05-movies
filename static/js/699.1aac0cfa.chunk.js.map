{"version":3,"file":"static/js/699.1aac0cfa.chunk.js","mappings":"iNACA,EAA4B,0BAA5B,EAAkE,0BAAlE,EAA4G,8BAA5G,EAAsJ,0B,SC0DtJ,EArDe,WACb,IAAAA,GAA0BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GACtBI,GAA4BL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAjCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,IAExBG,EAAAA,EAAAA,YAAU,WACHN,GAILO,MAAM,qDAADC,OAXM,mCAWsD,WAAAA,OAAUR,IACxES,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAM,IAChCF,MAAK,SAAAG,GAAI,OAAIP,EAAUO,EAAKC,QAAQ,IACpCC,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAM,yBAA0BA,EAAM,GAClE,GAAG,CAACf,IAaJ,OAPAM,EAAAA,EAAAA,YAAU,WACR,IAAMW,EAAaC,aAAaC,QAAQ,eACpCF,GACFhB,EAASgB,EAEb,GAAG,KAGDG,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAiBC,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,uBACJC,EAAAA,EAAAA,KAAA,SACEC,KAAK,OACLC,YAAY,yBACZC,MAAO3B,EACP4B,SAAU,SAAAC,GAAC,OAAI5B,EAAS4B,EAAEC,OAAOH,MAAM,KAEzCH,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAAiBC,SAC7BnB,EAAO2B,KAAI,SAAAC,GAAK,OACfR,EAAAA,EAAAA,KAAA,MAAmBH,UAAWC,EAAqBC,UACjDC,EAAAA,EAAAA,KAACS,EAAAA,GAAI,CACHC,GAAE,WAAA1B,OAAawB,EAAMG,IACrBd,UAAWC,EACXc,MAAO,CAAEC,YAAY,GACrBC,QAAS,kBAAsBN,EAAMG,QA1B/CjB,aAAaqB,QAAQ,cAAevC,EA0Bc,EAACuB,SAExCS,EAAMQ,SAPFR,EAAMG,GASV,QAKf,C","sources":["webpack://react-homework-template/./src/components/Search/Search.module.css?06df","components/Search/Search.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Search_container__JDaLY\",\"movieList\":\"Search_movieList__Rr3Hv\",\"movieListItem\":\"Search_movieListItem__j6mDz\",\"movieLink\":\"Search_movieLink__p9aGv\"};","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport styles from './Search.module.css';\n\nconst apiKey = 'dc71c629f4ca67f402f49e08e52c86a0';\n\nconst Search = () => {\n  const [query, setQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n\n    fetch(`https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&query=${query}`)\n      .then(response => response.json())\n      .then(data => setMovies(data.results))\n      .catch(error => console.error('Error fetching movies:', error));\n  }, [query]);\n\n  const handleLinkClick = () => {\n    localStorage.setItem('searchQuery', query);\n  };\n\n  useEffect(() => {\n    const savedQuery = localStorage.getItem('searchQuery');\n    if (savedQuery) {\n      setQuery(savedQuery);\n    }\n  }, []);\n\n  return (\n    <div className={styles.container}>\n      <h2>Movie Search Page</h2>\n      <input\n        type=\"text\"\n        placeholder=\"Enter a movie title...\"\n        value={query}\n        onChange={e => setQuery(e.target.value)}\n      />\n      <ul className={styles.movieList}>\n        {movies.map(movie => (\n          <li key={movie.id} className={styles.movieListItem}>\n            <Link\n              to={`/movies/${movie.id}`}\n              className={styles.movieLink}\n              state={{ fromSearch: true }}\n              onClick={() => handleLinkClick(movie.id)}\n            >\n              {movie.title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Search;\n"],"names":["_useState","useState","_useState2","_slicedToArray","query","setQuery","_useState3","_useState4","movies","setMovies","useEffect","fetch","concat","then","response","json","data","results","catch","error","console","savedQuery","localStorage","getItem","_jsxs","className","styles","children","_jsx","type","placeholder","value","onChange","e","target","map","movie","Link","to","id","state","fromSearch","onClick","setItem","title"],"sourceRoot":""}